[
    {
        "equivalent": [
            {
                "model": [
                    "Assn2Solution_fixed.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-2.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-3.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-4.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "exp": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "exp": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "exp": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "exp": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-5.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-6.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](FunTy(BoolTy(), BoolTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))))), 3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-26.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](BoolTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 4 -> Some[Type](BoolTy()), 3 -> Some[Type](StringTy()), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(6), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 4 -> None[Type](), * -> Some[Type](FunTy(BoolTy(), BoolTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(6), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2Solution_fixed.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-2.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-3.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-4.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "exp": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "exp": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "exp": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "exp": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "exp": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-5.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(3), Var(2), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-6.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), PairTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(3), Var(2), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(3, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), PairTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(BoolTy(), BoolTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> None[Type](), * -> Some[Type](FunTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(3), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(3), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy())))}",
                            "e": "LetRec(2, 3, StringTy(), PairTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-26.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), PairTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(3), Var(2), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Concat(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Times(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Str(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Length(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Bool(false)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Pair(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(4), Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-2.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-3.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-4.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "exp": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "exp": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "exp": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "exp": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-5.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-6.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](BoolTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](BoolTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))), 3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 3 -> Some[Type](FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](FunTy(FunTy(FunTy(FunTy(StringTy(), StringTy()), StringTy()), FunTy(FunTy(StringTy(), StringTy()), StringTy())), FunTy(FunTy(FunTy(StringTy(), StringTy()), StringTy()), FunTy(FunTy(StringTy(), StringTy()), StringTy()))))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-26.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-3.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-4.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-5.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-6.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{4 -> Some[Type](PairTy(StringTy(), StringTy())), 3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{4 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](StringTy()), 3 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(5))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))), 2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](IntTy()), * -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-26.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 3 -> Some[Type](FunTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, PairTy(StringTy(), StringTy()), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 3 -> Some[Type](FunTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-4.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-5.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-6.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{4 -> None[Type](), 2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> Some[Type](IntTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 4 -> None[Type](), * -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), PairTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), 3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), * -> Some[Type](FunTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy())))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-26.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), 4 -> None[Type](), * -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 4 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), * -> Some[Type](FunTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 3 -> Some[Type](FunTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-5.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-6.tyOf"
                ],
                "functions": [
                    "Assn2-2023-26.tyOf"
                ]
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-8.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy())), PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), StringTy())), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(PairTy(StringTy(), PairTy(StringTy(), StringTy())), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](FunTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy())))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), 3 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](FunTy(FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))), * -> Some[Type](PairTy(FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 3 -> Some[Type](PairTy(FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-6.tyOf": 220,
            "Assn2-2023-26.tyOf": 0
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-8.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-9.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](BoolTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy())))))}",
                            "e": "Rec(2, 2, StringTy(), FunTy(StringTy(), StringTy()), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy())), PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), PairTy(PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy())), PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), FunTy(PairTy(StringTy(), StringTy()), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), StringTy()), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), PairTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "Rec(2, 2, StringTy(), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Second(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), 2 -> Some[Type](PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "Second(Pair(Var(3), Var(4)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), StringTy())))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(Pair(Var(4), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](PairTy(StringTy(), StringTy()))}",
                            "e": "First(First(Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), FunTy(StringTy(), StringTy()), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-8.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-9.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-11.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(StringTy(), StringTy())), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), 2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), 3 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-9.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-11.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-12.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(BoolTy(), BoolTy())), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))), FunTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-23.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-11.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-12.tyOf"
                ],
                "functions": [
                    "Assn2-2023-23.tyOf"
                ]
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-14.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), 3 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), FunTy(StringTy(), StringTy())), FunTy(StringTy(), FunTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 4 -> Some[Type](PairTy(StringTy(), StringTy())), 2 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), 3 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 3 -> None[Type](), * -> Some[Type](FunTy(FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(3, 2, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](BoolTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy())), PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-12.tyOf": 220,
            "Assn2-2023-23.tyOf": 0
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-14.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-15.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> None[Type](), * -> Some[Type](FunTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(IntTy(), IntTy()), FunTy(IntTy(), IntTy()))), 3 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        },
                        "expected": "FunTy(StringTy(), StringTy())",
                        "got": "StringTy()"
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 3 -> Some[Type](FunTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-14.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-15.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-16.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](StringTy()), * -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), 2 -> Some[Type](PairTy(PairTy(IntTy(), IntTy()), PairTy(IntTy(), IntTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> None[Type](), * -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 3 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-15.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-16.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-17.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(BoolTy(), BoolTy())), 3 -> Some[Type](FunTy(BoolTy(), BoolTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), PairTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))), 2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy())))), FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy())))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())))), 3 -> Some[Type](FunTy(FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())), FunTy(StringTy(), FunTy(PairTy(StringTy(), StringTy()), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), PairTy(FunTy(StringTy(), PairTy(StringTy(), StringTy())), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))))), 3 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), 3 -> Some[Type](FunTy(FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))), FunTy(StringTy(), FunTy(StringTy(), PairTy(StringTy(), StringTy()))))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-16.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-17.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-19.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), 3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), 2 -> Some[Type](PairTy(FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), 3 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](FunTy(FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-17.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-19.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-21.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](FunTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "LetRec(2, 2, StringTy(), StringTy(), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), 3 -> Some[Type](FunTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), FunTy(StringTy(), StringTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())))), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), PairTy(PairTy(PairTy(BoolTy(), BoolTy()), StringTy()), PairTy(PairTy(BoolTy(), BoolTy()), StringTy())))), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 2, StringTy(), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), 2 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-19.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-21.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-24.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 4 -> Some[Type](FunTy(IntTy(), IntTy())), 2 -> Some[Type](StringTy()), * -> Some[Type](PairTy(FunTy(IntTy(), IntTy()), FunTy(IntTy(), IntTy())))}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(6), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        },
                        "expected": "FunTy(StringTy(), StringTy())",
                        "got": "StringTy()"
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())), PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(BoolTy(), BoolTy())), 2 -> Some[Type](StringTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](PairTy(IntTy(), IntTy()))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> Some[Type](StringTy())}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Index(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 4 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](StringTy()), * -> Some[Type](IntTy())}",
                            "e": "LetRec(3, 2, StringTy(), StringTy(), Var(6), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-21.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-24.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-25.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(IntTy(), IntTy())), 3 -> Some[Type](FunTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetFun(3, 2, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](StringTy()), 2 -> None[Type](), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> None[Type](), 3 -> Some[Type](StringTy()), * -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy())))}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy())), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(StringTy(), StringTy())), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(3), Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Var(2)"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()), Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "IfThenElse(Var(2), Var(4), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-24.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-25.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-27.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(3), Var(2)))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> None[Type](), * -> Some[Type](IntTy())}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(IntTy(), IntTy())), 3 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), PairTy(BoolTy(), BoolTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> None[Type](), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](FunTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-25.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-27.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-28.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](BoolTy()), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> None[Type](), 2 -> Some[Type](IntTy()), * -> Some[Type](BoolTy())}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> None[Type](), * -> Some[Type](PairTy(PairTy(BoolTy(), BoolTy()), StringTy()))}",
                            "e": "Rec(2, 2, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Var(2))"
                        }
                    }
                ]
            },
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(3), Var(2)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), 3 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Second(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())), PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy())))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Pair(Var(2), Var(3)))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "First(Var(2))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), 3 -> Some[Type](PairTy(IntTy(), IntTy())), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-27.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "model": [
                    "Assn2-2023-28.tyOf"
                ],
                "functions": []
            }
        ],
        "unequivalent": [
            {
                "function": "Assn2-2023-29.tyOf",
                "ctexs": [
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Eq(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](IntTy()), 2 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "LetRec(2, 3, StringTy(), StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](PairTy(FunTy(StringTy(), StringTy()), FunTy(StringTy(), StringTy()))), * -> None[Type]()}",
                            "e": "Rec(2, 3, StringTy(), StringTy(), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{* -> None[Type]()}",
                            "e": "Apply(Var(2), Var(3))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{3 -> Some[Type](FunTy(PairTy(StringTy(), StringTy()), PairTy(StringTy(), StringTy()))), 2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "LetFun(2, 3, StringTy(), Var(5), Var(4))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](BoolTy()), * -> None[Type]()}",
                            "e": "LetPair(2, 3, Var(4), Var(5))"
                        }
                    },
                    {
                        "args": {
                            "ctx": "{2 -> Some[Type](IntTy()), * -> None[Type]()}",
                            "e": "Lambda(2, StringTy(), Var(3))"
                        }
                    }
                ]
            }
        ],
        "unsafe": [],
        "unknownSafety": [],
        "unknownEquivalence": [],
        "wrong": [],
        "weights": {
            "Assn2-2023-28.tyOf": 200
        }
    },
    {
        "equivalent": [
            {
                "models": [
                    "Assn2-2023-29.tyOf"
                ],
                "functions": []
            }
        ]
    }
]